# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import movie_pb2 as movie__pb2


class MovieLibraryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getAndUpdateMovieLibrary = channel.stream_stream(
        '/movie.MovieLibrary/getAndUpdateMovieLibrary',
        request_serializer=movie__pb2.Movie.SerializeToString,
        response_deserializer=movie__pb2.Movie.FromString,
        )
    self.listMovies = channel.unary_stream(
        '/movie.MovieLibrary/listMovies',
        request_serializer=movie__pb2.ListMoviesRequest.SerializeToString,
        response_deserializer=movie__pb2.Movie.FromString,
        )


class MovieLibraryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getAndUpdateMovieLibrary(self, request_iterator, context):
    """Bidirectional streaming rpc to allow user to get and add movies to collection
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listMovies(self, request, context):
    """server side streaming rpc to allow user to fetch movies from the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MovieLibraryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getAndUpdateMovieLibrary': grpc.stream_stream_rpc_method_handler(
          servicer.getAndUpdateMovieLibrary,
          request_deserializer=movie__pb2.Movie.FromString,
          response_serializer=movie__pb2.Movie.SerializeToString,
      ),
      'listMovies': grpc.unary_stream_rpc_method_handler(
          servicer.listMovies,
          request_deserializer=movie__pb2.ListMoviesRequest.FromString,
          response_serializer=movie__pb2.Movie.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'movie.MovieLibrary', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
